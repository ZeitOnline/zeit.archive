Breadcrumb index (#6749)
========================

>>> import zeit.cms.testing
>>> zeit.cms.testing.set_site()
>>> principal = zeit.cms.testing.create_interaction()

Whenever a ressort folder is created an index is automatically placed in there.

Create a suitable folder structure:

>>> import zeit.cms.repository.interfaces
>>> from zeit.cms.repository.folder import Folder
>>> import zope.component
>>> repository = zope.component.getUtility(
...     zeit.cms.repository.interfaces.IRepository)
>>> repository['deutschland'] = Folder()
>>> repository['deutschland']['2009-11'] = Folder()
>>> repository['deutschland']['integration'] = Folder()
>>> repository['deutschland']['integration']['2009-06'] = Folder()


Create an article in deutschland/2009-11. An index will be created if it is
published:

>>> import zeit.content.article.article
>>> article = zeit.content.article.article.Article()
>>> article.ressort = u'Deutschland'
>>> article.year = 2009
>>> repository['deutschland']['2009-11']['art'] = article

Publish article:

>>> import lovely.remotetask.interfaces
>>> import zeit.cms.workflow.interfaces
>>> import zeit.workflow.interfaces
>>> article = repository['deutschland']['2009-11']['art']
>>> workflow = zeit.workflow.interfaces.IContentWorkflow(article)
>>> publish = zeit.cms.workflow.interfaces.IPublish(article)
>>> workflow.urgent = True
>>> workflow.can_publish()
'can-publish-success'
>>> p = publish.publish()
>>> tasks = zope.component.getUtility(
...     lovely.remotetask.interfaces.ITaskService, 'general')
>>> tasks.process()
>>> workflow.published
True


There is an index in detuschland/2009-11 now:

>>> 'index' in repository['deutschland']['2009-11']
True

>>> index = repository['deutschland']['2009-11']['index']
>>> zeit.cms.workflow.interfaces.IPublishInfo(index).published
True
>>> index.ressort
u'Deutschland'
>>> index.year
2009
>>> print index.title
Artikel und Nachrichten im November 2009 aus dem Ressort Deutschland | ZEIT ONLINE
>>> print index.teaserTitle
Artikel und Nachrichten im November 2009 aus dem Ressort Deutschland | ZEIT ONLINE
>>> print index.teaserText
Lesen Sie alle Artikel und Nachrichten vom November 2009 aus dem Ressort Deutschland auf ZEIT ONLINE

The CP is filled with blocks:

>>> import lxml.etree
>>> print lxml.etree.tostring(index.xml['body'], pretty_print=True),
<body...>
  <cluster area="feature"...>
    <region area="lead"...>
      <container cp:type="cpextra" module="solr-month"...>
        <cp_extra id="solr-month"/>
      </container>
    </region>
    <region area="informatives"...>
      <container cp:type="cpextra" module="dpa-news"...>
        <cp_extra id="dpa-news"/>
      </container>
      <container cp:type="cpextra" module="afp_extra"...>
        <cp_extra id="afp_extra"/>
      </container>
      <container cp:type="cpextra" module="sid_extra"...>
        <cp_extra id="sid_extra"/>
      </container>
      <container cp:type="cpextra" module="blindblock"...>
        <cp_extra id="blindblock"/>
      </container>
      <container cp:type="cpextra" module="mostread"...>
        <cp_extra id="mostread"/>
      </container>
      <container cp:type="cpextra" module="mostcommented"...>
        <cp_extra id="mostcommented"/>
      </container>
    </region>
  </cluster>
  <cluster area="teaser-mosaic".../>
  ...


If the index already exists, it will not be created again:

>>> uid = index['lead'].keys()
>>> p = publish.publish()
>>> tasks = zope.component.getUtility(
...     lovely.remotetask.interfaces.ITaskService, 'general')
>>> tasks.process()
>>> index = repository['deutschland']['2009-11']['index']
>>> uid == index['lead'].keys()
True

If the index is not published, it will be publihsed again:

>>> workflow = zeit.workflow.interfaces.IContentWorkflow(index)
>>> workflow.published
True
>>> workflow.published = False  # Depublish
>>> p = publish.publish()
>>> tasks.process()
>>> workflow.published
True


If an article is in a month folder of a sub ressort that is handled correctly
as well:

>>> article = zeit.content.article.article.Article()
>>> article.ressort = u'Deutschland'
>>> article.sub_ressort = u'Integration'
>>> article.year = 2009
>>> repository['deutschland']['integration']['2009-06']['art'] = article
>>> article = repository['deutschland']['integration']['2009-06']['art']
>>> workflow = zeit.workflow.interfaces.IContentWorkflow(article)
>>> publish = zeit.cms.workflow.interfaces.IPublish(article)
>>> workflow.urgent = True
>>> workflow.can_publish()
'can-publish-success'
>>> p = publish.publish()
>>> tasks = zope.component.getUtility(
...     lovely.remotetask.interfaces.ITaskService, 'general')
>>> tasks.process()
>>> workflow.published
True

The texts contain the sub ressort:

>>> index = repository['deutschland']['integration']['2009-06']['index']
>>> index.ressort
u'Deutschland'
>>> index.sub_ressort
u'Integration'
>>> index.year
2009
>>> print index.title
Artikel und Nachrichten im Juni 2009 aus dem Ressort Integration | ZEIT ONLINE
>>> print index.teaserTitle
Artikel und Nachrichten im Juni 2009 aus dem Ressort Integration | ZEIT ONLINE
>>> print index.teaserText
Lesen Sie alle Artikel und Nachrichten vom Juni 2009 aus dem Ressort Integration auf ZEIT ONLINE
>>> zeit.workflow.interfaces.IContentWorkflow(index).published
True


The container and index for the ressort was implicitly also created and
published:

>>> index = repository['deutschland']['2009-06']['index']
>>> index.ressort
u'Deutschland'
>>> index.sub_ressort is None
True
>>> index.year
2009
>>> print index.title
Artikel und Nachrichten im Juni 2009 aus dem Ressort Deutschland | ZEIT ONLINE
>>> print index.teaserTitle
Artikel und Nachrichten im Juni 2009 aus dem Ressort Deutschland | ZEIT ONLINE
>>> print index.teaserText
Lesen Sie alle Artikel und Nachrichten vom Juni 2009 aus dem Ressort Deutschland auf ZEIT ONLINE
>>> zeit.workflow.interfaces.IContentWorkflow(index).published
True


If the article is not in a month folder nothing happens:

>>> article = zeit.content.article.article.Article()
>>> article.ressort = u'Deutschland'
>>> article.sub_ressort = u'Integration'
>>> article.year = 2009
>>> repository['deutschland']['integration']['art'] = article
>>> article = repository['deutschland']['integration']['art']
>>> workflow = zeit.workflow.interfaces.IContentWorkflow(article)
>>> publish = zeit.cms.workflow.interfaces.IPublish(article)
>>> workflow.urgent = True
>>> workflow.can_publish()
'can-publish-success'
>>> p = publish.publish()
>>> tasks = zope.component.getUtility(
...     lovely.remotetask.interfaces.ITaskService, 'general')
>>> tasks.process()
>>> workflow.published
True
>>> 'index' in repository['deutschland']['integration']
False

Make sure no superfluous containers are created when an object outside a month
container is published:

>>> 'integration' in repository
False
